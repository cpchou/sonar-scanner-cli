version: "3"

services:
  sonarqube:
    image: sonarqube

    container_name: sonarqube
    expose:
      - 9000
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    depends_on:
      - db
    environment:
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar?useUnicode=true&amp;characterEncoding=utf8
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
     

  scanner-cli:
    image: cpchou/sonar-scanner-cli
    #image: maven:3.8-openjdk-11
    hostname: scanner-cli
    environment:
      - TZ=Asia/Taipei 
    networks:
      - sonarnet
    container_name: scanner-cli
    restart: always
    volumes:
       - c:\Docker\sonarqube2\vol:/home/console
    privileged: true
    stdin_open: true
    tty: true
 #   entrypoint:
 #     - "/usr/local/bin/mvn-entrypoint.sh"
    depends_on:
      - sonarqube
      - db
      
  db:
    image: postgres
    container_name: db
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

networks:
  sonarnet:


volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data: